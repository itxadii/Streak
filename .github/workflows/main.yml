name: Auto Contribution Commit with Verified GPG Signing

on:
  schedule:
    - cron: '0 23 * * *'  # 11 PM UTC = 4:30 AM IST
  workflow_dispatch:

jobs:
  commit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_PAT }}
          fetch-depth: 0

      - name: Setup Git Identity
        run: |
          git config user.name "itxadii"
          git config user.email "itzzsecure@gmail.com"

      - name: Setup GPG Environment
        run: |
          mkdir -p ~/.gnupg
          chmod 700 ~/.gnupg
          echo "use-agent" >> ~/.gnupg/gpg.conf
          echo "pinentry-mode loopback" >> ~/.gnupg/gpg.conf
          echo "allow-loopback-pinentry" >> ~/.gnupg/gpg-agent.conf
          echo "no-tty" >> ~/.gnupg/gpg.conf
          gpgconf --kill gpg-agent

      - name: Import GPG Key
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
        run: |
          # Write key to file
          echo "$GPG_PRIVATE_KEY" > private.key
          # Import without passphrase (will be added later)
          gpg --batch --import private.key
          rm private.key
          # Get key ID
          KEY_ID=$(gpg --list-secret-keys --with-colons | awk -F: '/^sec:/ {print $5}' | head -n1)
          echo "KEY_ID=$KEY_ID" >> $GITHUB_ENV
          git config --global user.signingkey "$KEY_ID"
          git config --global commit.gpgsign true

      - name: Add Passphrase to Key
        env:
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: |
          # Get keygrip
          KEYGRIP=$(gpg --list-secret-keys --with-keygrip | awk '/^sec/ {getline; print $3}' | head -n1)
          # Add passphrase to agent
          /usr/lib/gnupg/gpg-connect-agent <<EOF
          PRESET_PASSPHRASE $KEYGRIP -1 $GPG_PASSPHRASE
          EOF

      - name: Test GPG Signing
        run: |
          echo "Testing GPG signing..." > test.txt
          git add test.txt
          git commit -S -m "Test GPG signing" || true
          git reset HEAD~1  # Undo test commit

      - name: Update contribution file
        run: |
          echo "ðŸŸ¢ $(date -u)" >> AUTOMATED_CONTRIBUTIONS.md
          echo "Verified commit: $(date -u '+%Y-%m-%d %H:%M:%S %Z')" >> AUTOMATED_CONTRIBUTIONS.md

      - name: Commit and Push
        run: |
          git add AUTOMATED_CONTRIBUTIONS.md
          git commit -S -m "chore: auto commit at $(date -u)" || exit 0
          git push
